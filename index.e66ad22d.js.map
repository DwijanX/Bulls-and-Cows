{"mappings":"wlBAAA,MAAAA,KAAAC,EAAA,qeAUIC,IACIC,KAAKC,uBAAuBC,MAAMC,QAAQ,OAiDnCC,IAAAA,EA1DTA,oBAEFA,EAAYH,gGACZI,CAAAL,KAAAI,GAAAE,EAAAN,KAAAO,GACIP,KAAKQ,WAAW,IAAIC,EAAAA,QACpBT,KAAKC,uBAAuBA,qDAMhCS,MAAA,SAAmBC,GAEf,IAAIC,EAAW,GAmBf,OAlBAC,QAAQC,IAAIH,GACqC,GAA9CX,KAAKQ,WAAWO,gBAAgBJ,IAE/BC,EAAa,iDACbA,GAAa,qBAAsBZ,KAAKQ,WAAWQ,cAAcL,GAAa,OAC1EX,KAAKQ,WAAWS,qBAAqB,IAErCL,GAAa,wCAAyCZ,KAAKQ,WAAWU,gBAAgB,OACtFC,EAAAnB,KAAAO,EAAAR,GAAAqB,KAAApB,SAKJY,GAAa,gEACbS,YAAYnB,MAAMC,QAAQ,OAC1BgB,EAAAnB,KAAAO,EAAAR,GAAAqB,KAAApB,OAGGY,kCAEXF,MAAA,SAAuBY,GAEP,IAATA,GAECtB,KAAKQ,WAAWe,cAAcD,4BAGtCZ,MAAA,SAAgBc,GAEZA,EAAWC,UAAUzB,KAAKQ,WAAWS,2CAEzCP,MAAA,WAEI,OAAOV,KAAKQ,2CAEhBE,MAAA,SAAuBgB,GAEnBA,EAAOD,UAAUzB,KAAKQ,WAAWmB,4CAErCjB,MAAA,WAEIV,KAAKQ,WAAW,IAAIC,EAAAA,6FAvDtBL,oTCFN,IAAMwB,EAA2B,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAmJ/JnB,EAjJTA,oBAEDA,iGACAoB,CAAA7B,KAAAS,GACGT,KAAK8B,YAAY,EACjB9B,KAAK+B,WACL/B,KAAKsB,MAAM,EACXtB,KAAKgC,WAAW,EAChBhC,KAAKiC,YAAW,EAChBjC,KAAKkC,QAAU,IAAIC,qDAEtBzB,MAAA,SAAiB0B,GAKhB,IAHA,IAAIC,EAAmBC,OAAOF,GAC1BG,EAAiBD,OAAOtC,KAAK+B,YAC7BS,EAAe,GACXC,EAAM,EAAEA,EAAMJ,EAAmBK,OAAOD,IAE1CF,EAAiBI,SAASN,EAAmBI,MAE1CD,GAAgB,IAChBD,EAAiBA,EAAiBK,QAAQP,EAAmBI,GAAO,KAG7E,OAAOD,6BAER9B,MAAA,SAAkB0B,GAKd,IAHA,IAAIC,EAAmBC,OAAOF,GAC1BG,EAAiBD,OAAOtC,KAAK+B,YAC7BS,EAAe,GACXC,EAAM,EAAEA,EAAMJ,EAAmBK,OAAOD,IAE1CF,EAAiBE,IAAUJ,EAAmBI,KAE9CD,GAAgB,KAGtB,OAAOA,yBAGX9B,MAAA,SAAcgC,GAEb1C,KAAKgC,WAAWU,yBAGjBhC,MAAA,SAAcA,GAEbV,KAAKiC,WAAWvB,0BAGjBA,MAAA,SAAe0B,GAEZpC,KAAK+B,WAAWK,yBAGnB1B,MAAA,WAEG,OAAOV,KAAK+B,mCAGfrB,MAAA,WAEI,IAAImC,EAAW,YAKf,OAJA7C,KAAKkC,QAAQY,SAAQ,SAACV,GACnBS,GAAa,IAAKT,EAAK,OAE1BS,EAAWA,EAAWE,UAAU,EAAEF,EAAWH,OAAO,gCAIxDhC,MAAA,SAAoB0B,GAEhBpC,KAAKkC,QAAQc,IAAIZ,4BAGrB1B,MAAA,WAEwB,GAAlBV,KAAK8B,YAAgB9B,KAAK8B,YAAY,EACpC9B,KAAK8B,YAAY,0BAGzBpB,MAAA,WAEG,OAAOV,KAAK8B,mCAGfpB,MAAA,WAEG,OAAOV,KAAKsB,6BAGfZ,MAAA,SAAcuC,GAEbjD,KAAKsB,MAAM2B,2BAGZvC,MAAA,SAAgB0B,GAOZ,OALKpC,KAAKkC,QAAQgB,IAAId,KAEnBpC,KAAKsB,OAAO,GAEftB,KAAKmD,oBAAoBf,GAClBA,GAAQpC,KAAK+B,kCAGxBrB,MAAA,WAEI,OAAOV,KAAKgC,sCAKhBtB,MAAA,WAEC,OAAOV,KAAKsB,6BAKbZ,MAAA,SAAc0B,GAEV,IAAIgB,EAAWpD,KAAKqD,kBAAkBjB,GAEtC,OAAOgB,EADOpD,KAAKsD,iBAAiBlB,GACTW,UAAUK,EAASV,sCAIlDhC,MAAA,WAEC,IACI6C,EADAC,EAAiB,GAGlBD,EADAvD,KAAKiC,WACwBL,EAA2Bc,OAE3B,EAChC,IAAI,IAAIe,EAAG,EAAEA,EAAGzD,KAAKgC,WAAWyB,IAChC,CACG,IAAIC,EAAYC,KAAKC,MAAOD,KAAKE,SAAYN,GAC7CC,GAAkB5B,EAA2B8B,GAEhD1D,KAAK+B,WAAWyB,uFA9IhB/C,0BCFN,MAAAqD,KAAAhE,EAAA,sCAEA,IAAMsC,EAAO2B,SAASC,cAAc,SAC9BC,EAAUF,SAASC,cAAc,YACjCE,EAAaH,SAASC,cAAc,eACpCG,EAAcJ,SAASC,cAAc,gBACrC3C,EAAc0C,SAASC,cAAc,gBACrCI,EAAuBL,SAASM,iBAAiB,yBACjDC,EAAmBP,SAASM,iBAAiB,qBAC7CE,EAAaR,SAASC,cAAc,eACpCQ,EAAcT,SAASM,iBAAiB,mBACxCI,EAAkBV,SAASC,cAAc,oBACzCU,EAAWX,SAASC,cAAc,aAClCW,EAAkBZ,SAASC,cAAc,oBACzC1C,EAAQyC,SAASC,cAAc,UAC/BY,EAAkBb,SAASC,cAAc,oBAGzCa,EAAe,IAAIzE,EAAAA,QAAuBwE,GAE5C/B,EAAakB,SAASC,cAAc,eACpCc,EAAcf,SAASC,cAAc,gBACrCe,EAAsBhB,SAASC,cAAc,iCAcxCgB,EAAmBC,EAAMC,GAEhCD,EAAMnC,SAAQ,SAACqC,GACbA,EAAKjF,MAAMC,QAAQ+E,KAfvBV,EAAY1B,SAAQ,SAACsC,GACnBA,EAAMC,iBAAiB,SAAQ,SAACC,GAC9BA,EAAMC,iBACN,IAAIC,EAAUX,EAAeY,gBAAgBC,gBACzCN,EAAM1E,MAAMgC,OAAO8C,IAErBJ,EAAM1E,MAAQ0E,EAAM1E,MAAMiF,MAAM,EAAEH,UAcxCtB,EAAWmB,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBAEN,IAAMK,EAAatD,OAAOF,EAAK1B,OAC/B+D,EAAgBvE,MAAMC,QAAQ,OAC9B0C,EAAWpB,UAAY,2BAA2BmE,EAA3B,kCACvB/C,EAAW3C,MAAMC,QAAQ,SACzBgE,EAAYjE,MAAMC,QAAU,YAG9BgE,EAAYkB,iBAAiB,SAAQ,SAACC,GACpCA,EAAMC,iBACNP,EAAmBZ,EAAqB,QACxCY,EAAmBV,EAAiB,QACpC,IAAMsB,EAAatD,OAAOF,EAAK1B,OAC/BmE,EAAeY,gBAAgBI,kBAC/BhB,EAAeY,gBAAgBK,eAAeF,GAC9Cf,EAAekB,uBAAuBzE,EAAMZ,OAC5CmE,EAAemB,gBAAgBzB,GAC/BM,EAAeoB,uBAAuBlB,MAGxC1D,EAAYgE,iBAAiB,SAAQ,SAACC,GACpCA,EAAMC,iBACNT,EAAYrD,UAAYoD,EAAeqB,mBAAmB5D,OAAO2B,EAAQvD,QACzEmE,EAAeoB,uBAAuBlB,GACtCF,EAAemB,gBAAgBzB,MAGjCG,EAASW,iBAAiB,SAAQ,SAACC,GACjCA,EAAMC,iBACNP,EAAmBZ,EAAqB,QACxCY,EAAmBV,EAAiB,QACpCG,EAAgBvE,MAAMC,QAAQ,OAE9B0E,EAAeY,gBAAgBI,kBAC/BhB,EAAeY,gBAAgBU,uBAE/BtB,EAAekB,uBAAuBzE,EAAMZ,OAC5CmE,EAAemB,gBAAgBzB,GAC/BM,EAAeoB,uBAAuBlB,MAIxCN,EAAgBY,iBAAiB,UAAS,SAACC,GACzCT,EAAeY,gBAAgBW,cAAcC,SAAS5B,EAAgB/D,QACtE8D,EAAY1B,SAAQ,SAACsC,GACnBA,EAAM1E,MAAM,SAGhBiE,EAAgBU,iBAAiB,UAAS,WACxC,IAAIiB,EAAW,CAACC,MAAM,SAASC,KAAK,QAChCC,EAAkB9B,EAAgB+B,QACtC7B,EAAeY,gBAAgBkB,cAAcF,GAC7CjC,EAAY1B,SAAQ,SAACsC,GACnBA,EAAMwB,KAAKN,EAAWG,SAG1B7B,EAAgBS,iBAAiB,SAAQ,SAACwB,GACxCA,EAAEtB,iBACFV,EAAeiC,oBACf9B,EAAmBZ,EAAqB,UACxCY,EAAmBV,EAAiB,QACpCzB,EAAW3C,MAAMC,QAAQ,OACzBgE,EAAYjE,MAAMC,QAAQ,OAC1ByE,EAAgB1E,MAAMC,QAAQ,OAC9B2E,EAAYrD,UAAU,GACtBsD,EAAoBtD,UAAU,GAC9B+C,EAAY1B,SAAQ,SAACsC,GACnBA,EAAM1E,MAAM,SAKlBqG,OAAS,SAACzB,GACRT,EAAemB,gBAAgBzB","sources":["src/CowsAndBullsController.js","src/CowsAndBulls.js","src/presenter.js"],"sourcesContent":["import CowsAndBulls from \"./CowsAndBulls.js\";\n\nclass CowsAndBullsController\n{\n    constructor(restartButtonReference)\n    {\n        this.gameObject=new CowsAndBulls;\n        this.restartButtonReference=restartButtonReference;\n    }\n    #setRestartButtonVisible()\n    {\n        this.restartButtonReference.style.display=\"flex\"\n    }\n    getGuessAnswerHTML(guessedCode)\n    {\n        let AnswerHTML=\"\";\n        console.log(guessedCode);\n        if(this.gameObject.guessSecretCode(guessedCode)==false)//returns true if code is correct\n        {\n            AnswerHTML = \"<p>El codigo que ingreso no es el correcto</p>\"\n            AnswerHTML+= \"<p>Pista obtenida:\"+ this.gameObject.getHintString(guessedCode)+\"</p>\"\n            if( this.gameObject.getLifesRemaining()<=0)\n            {\n                AnswerHTML+= \"<p>Perdiste el juego, el codigo era: \"+ this.gameObject.getSecretCode()+\"</p>\"\n                this.#setRestartButtonVisible()\n            }\n        }\n        else\n        {\n            AnswerHTML+= \"<p>Lo lograste!!!, el codigo que ingresaste es el correcto<p>\"\n            guessButton.style.display=\"none\"\n            this.#setRestartButtonVisible()\n\n        }\n        return AnswerHTML\n    }\n    setLifesIfValueIsValid(lifes)\n    {\n        if(lifes != \"\")\n        {\n            this.gameObject.setLifesValue(lifes)\n        }\n    }\n    updateLifesHTML(LifesBlock)\n    {\n        LifesBlock.innerHTML=this.gameObject.getLifesRemaining()\n    }\n    getGameObject()\n    {\n        return this.gameObject\n    }\n    fillHTMLObjwithHistory(Object)\n    {\n        Object.innerHTML=this.gameObject.getCodeHistory();\n    }\n    restartGameObject()\n    {\n        this.gameObject=new CowsAndBulls()\n    }\n}\nexport default CowsAndBullsController","const valuesToGenerateSecretCode=['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\nclass CowsAndBulls\n{\n     constructor()\n     {\n        this.currentTurn=1\n        this.secretCode\n        this.lifes=8\n        this.codeLength=4\n        this.useLetters=false\n        this.codeSet = new Set()\n     }\n     getCowCharacters(code)\n     {\n      let guessingCodeString=String(code)\n      let secretCodeString=String(this.secretCode);\n      let cowsCharacters=\"\"\n      for(let index=0;index<guessingCodeString.length;index++)\n      {\n         if(secretCodeString.includes(guessingCodeString[index]))\n         {\n               cowsCharacters+=\"*\"\n               secretCodeString=secretCodeString.replace(guessingCodeString[index],\"\")\n         }\n      }\n      return cowsCharacters\n     }\n     getBullCharacters(code)\n     {\n         let guessingCodeString=String(code)\n         let secretCodeString=String(this.secretCode);\n         let cowsCharacters=\"\"\n         for(let index=0;index<guessingCodeString.length;index++)\n         {\n            if(secretCodeString[index] == guessingCodeString[index])\n            {\n               cowsCharacters+=\"!\"\n            }\n         }\n         return cowsCharacters\n     }\n\n     setCodeLength(length)\n     {\n      this.codeLength=length\n     }\n\n     setUseLetters(value) \n     {\n      this.useLetters=value\n     }\n\n     saveSecretCode(code)\n     {\n        this.secretCode=code\n     }\n\n     getSecretCode()\n     {\n        return this.secretCode\n     }\n\n     getCodeHistory()\n     {\n         let codeString=\"intentos:\"\n         this.codeSet.forEach((code)=>{\n            codeString+= ' '+ code+\",\";\n         })\n         codeString=codeString.substring(0,codeString.length-1)\n         return codeString\n     }\n\n     addNewCodeToHistory(code)\n     {\n         this.codeSet.add(code)\n     }\n\n     swapPlayersTurn()\n     {\n        if(this.currentTurn==1) this.currentTurn=2\n        else this.currentTurn=1\n     }\n\n     getCurrentTurn()\n     {\n        return this.currentTurn\n     }\n\n     getLifesValue()\n     {\n        return this.lifes\n     } \n\n     setLifesValue(newLifeValue)\n     {\n      this.lifes=newLifeValue\n     }\n\n     guessSecretCode(code)\n     {\n         if (!this.codeSet.has(code))\n         {\n            this.lifes-=1\n         }\n         this.addNewCodeToHistory(code)\n         return code == this.secretCode\n     }\n\n     getCodeLength()\n     {\n         return this.codeLength\n     }\n     \n     \n\n     getLifesRemaining()\n     {\n      return this.lifes\n     }\n\n     \n\n     getHintString(code)\n     {\n         let bullChar = this.getBullCharacters(code)\n         let cowChar = this.getCowCharacters(code)\n         return bullChar +  cowChar.substring(bullChar.length)\n     }\n     \n\n     generateCodeRandomly()\n     {\n      let randomSecretCode=\"\"\n      let numberOfValuesToGenerateCode;\n      if(this.useLetters)\n         numberOfValuesToGenerateCode=valuesToGenerateSecretCode.length\n      else\n         numberOfValuesToGenerateCode=9\n      for(let it=0;it<this.codeLength;it++)\n      {\n         let randomIndex=Math.round( Math.random() * (numberOfValuesToGenerateCode));\n         randomSecretCode+=valuesToGenerateSecretCode[randomIndex]\n      }\n      this.secretCode=randomSecretCode\n     }\n}\nexport default CowsAndBulls","import CowsAndBullsController from \"./CowsAndBullsController.js\"\n\nconst code = document.querySelector(\"#code\");\nconst codeTry = document.querySelector(\"#codeTry\");\nconst saveButton = document.querySelector(\"#saveButton\");\nconst startButton = document.querySelector(\"#startButton\");\nconst guessButton = document.querySelector(\"#guessButton\");\nconst SecretCodeInputClass = document.querySelectorAll(\".SecretCodeInputClass\");\nconst itemsToGuessCode = document.querySelectorAll(\".itemsToGuessCode\");\nconst LifesValue = document.querySelector(\"#LifesValue\");\nconst inputsArray = document.querySelectorAll(\".inputCodeField\")\nconst codeLengthInput = document.querySelector(\"#codeLengthInput\")\nconst AIButton = document.querySelector(\"#AIButton\")\nconst lettersCheckBox = document.querySelector(\"#lettersCheckBox\")\nconst lifes = document.querySelector(\"#lifes\")\nconst playAgainButton = document.querySelector(\"#playAgainButton\")\n\n\nconst gameController=new CowsAndBullsController(playAgainButton)\n\nlet codeString = document.querySelector(\"#codeString\");\nlet guessString = document.querySelector(\"#guessString\");\nlet codesAlreadyWritten = document.querySelector(\"#codesAlreadyWritten\");\n\ninputsArray.forEach((input)=>{\n  input.addEventListener(\"input\",(event)=>{\n    event.preventDefault();\n    let maxLength=gameController.getGameObject().getCodeLength()\n    if (input.value.length>maxLength)\n    {\n      input.value = input.value.slice(0,maxLength)\n    }\n  })\n})\n\n\nfunction changeItemsDisplay(Items,displayMode)\n{\n  Items.forEach((item)=>{\n    item.style.display=displayMode\n  })\n}\n\n\nsaveButton.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n  \n    const codeNumber = String(code.value);\n    codeLengthInput.style.display=\"none\"\n    codeString.innerHTML = \"<p>La clave secreta es: \"+codeNumber + \", estas listo para empezar?\" + \"</p>\";\n    codeString.style.display=\"inline\"\n    startButton.style.display = 'inline';\n  });\n  \n  startButton.addEventListener(\"click\",(event)=>{\n    event.preventDefault();\n    changeItemsDisplay(SecretCodeInputClass,\"none\")\n    changeItemsDisplay(itemsToGuessCode,\"flex\")\n    const codeNumber = String(code.value);\n    gameController.getGameObject().swapPlayersTurn()\n    gameController.getGameObject().saveSecretCode(codeNumber)\n    gameController.setLifesIfValueIsValid(lifes.value)\n    gameController.updateLifesHTML(LifesValue)\n    gameController.fillHTMLObjwithHistory(codesAlreadyWritten)\n  })\n\n  guessButton.addEventListener(\"click\",(event)=>{\n    event.preventDefault();\n    guessString.innerHTML = gameController.getGuessAnswerHTML(String(codeTry.value))\n    gameController.fillHTMLObjwithHistory(codesAlreadyWritten)\n    gameController.updateLifesHTML(LifesValue)\n  })\n  \n  AIButton.addEventListener(\"click\",(event)=>{\n    event.preventDefault();\n    changeItemsDisplay(SecretCodeInputClass,\"none\")\n    changeItemsDisplay(itemsToGuessCode,\"flex\")\n    codeLengthInput.style.display=\"none\"\n\n    gameController.getGameObject().swapPlayersTurn()\n    gameController.getGameObject().generateCodeRandomly()\n\n    gameController.setLifesIfValueIsValid(lifes.value)\n    gameController.updateLifesHTML(LifesValue)\n    gameController.fillHTMLObjwithHistory(codesAlreadyWritten)\n\n  })\n  \n  codeLengthInput.addEventListener(\"change\",(event)=>{\n    gameController.getGameObject().setCodeLength(parseInt(codeLengthInput.value))\n    inputsArray.forEach((input)=>{\n      input.value=\"\"\n    })\n  })\n  lettersCheckBox.addEventListener(\"change\",()=>{\n    let inputModes={false:\"number\",true:\"text\"}\n    let useLettersBoolean=lettersCheckBox.checked\n    gameController.getGameObject().setUseLetters(useLettersBoolean)\n    inputsArray.forEach((input)=>{\n      input.type=inputModes[useLettersBoolean]\n    })\n  })\n  playAgainButton.addEventListener(\"click\",(e)=>{\n    e.preventDefault();\n    gameController.restartGameObject()\n    changeItemsDisplay(SecretCodeInputClass,\"inline\")\n    changeItemsDisplay(itemsToGuessCode,\"none\")\n    codeString.style.display=\"none\"\n    startButton.style.display=\"none\"\n    playAgainButton.style.display=\"none\"\n    guessString.innerHTML=\"\"\n    codesAlreadyWritten.innerHTML=\"\"\n    inputsArray.forEach((input)=>{\n      input.value=\"\"\n    })\n  })\n\n  \nonload = (event) => { \n  gameController.updateLifesHTML(LifesValue)\n};"],"names":["$70e2dafaa3600baa$var$_CowsAndBulls","parcelRequire","$70e2dafaa3600baa$var$_setRestartButtonVisible2","this","restartButtonReference","style","display","CowsAndBullsController","$70e2dafaa3600baa$var$_classCallCheck","$70e2dafaa3600baa$var$_classPrivateMethodInitSpec","$70e2dafaa3600baa$var$_setRestartButtonVisible","gameObject","CowsAndBulls","value","guessedCode","AnswerHTML","console","log","guessSecretCode","getHintString","getLifesRemaining","getSecretCode","$70e2dafaa3600baa$var$_classPrivateMethodGet","call","guessButton","lifes","setLifesValue","LifesBlock","innerHTML","Object","getCodeHistory","valuesToGenerateSecretCode","$3d41bc820738876a$var$_classCallCheck","currentTurn","secretCode","codeLength","useLetters","codeSet","Set","code","guessingCodeString","String","secretCodeString","cowsCharacters","index","length","includes","replace","codeString","forEach","substring","add","newLifeValue","has","addNewCodeToHistory","bullChar","getBullCharacters","getCowCharacters","numberOfValuesToGenerateCode","randomSecretCode","it","randomIndex","Math","round","random","$89b0829c857563b6$var$_CowsAndBullsController","document","querySelector","codeTry","saveButton","startButton","SecretCodeInputClass","querySelectorAll","itemsToGuessCode","LifesValue","inputsArray","codeLengthInput","AIButton","lettersCheckBox","playAgainButton","gameController","guessString","codesAlreadyWritten","changeItemsDisplay","Items","displayMode","item","input","addEventListener","event","preventDefault","maxLength","getGameObject","getCodeLength","slice","codeNumber","swapPlayersTurn","saveSecretCode","setLifesIfValueIsValid","updateLifesHTML","fillHTMLObjwithHistory","getGuessAnswerHTML","generateCodeRandomly","setCodeLength","parseInt","inputModes","false","true","useLettersBoolean","checked","setUseLetters","type","e","restartGameObject","onload"],"version":3,"file":"index.e66ad22d.js.map"}